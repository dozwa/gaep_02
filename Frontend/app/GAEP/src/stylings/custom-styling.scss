@import "custom-variables.scss";

/* In deiner .css Datei */
.region-topbar {
  background-color: $topbar-bg; /* Hintergrundfarbe des Menüs */
  overflow: hidden; /* Wird verwendet, um überfließende Inhalt zu verbergen */
  position: fixed; /* Fixiert das Menü oben auf der Seite */
  top: 0; /* Positioniert das Menü am oberen Rand */
  left: 0;
  width: 100%; /* Lässt das Menü die ganze Breite einnehmen */
  z-index: 999; /* Stellt sicher, dass das Menü über anderen Inhalten liegt */
  min-height: $topbar-minimalheight;
}

.region-topbar ul {
  margin: 0; /* Entfernt Standardmargen */
  padding: 0; /* Entfernt Standardabstände */
  list-style-type: none; /* Entfernt Aufzählungszeichen */
}

.region-topbar li {
  display: inline; /* Li-Elemente in einer Linie darstellen */
}

.region-topbar li a {
  display: inline-block; /* Ermöglicht das Anwenden von Rändern und Padding */
  color: white; /* Textfarbe */
  text-align: center; /* Zentriert den Text */
  padding: 14px 16px; /* Innerer Abstand zu den Rändern des Links */
  text-decoration: none; /* Entfernt die Unterstreichung 
                             des Links */
}

.region-topbar li a:hover {
  background-color: $navtopbar-bg-hover; /* Hintergrundfarbe beim Hoover-Effekt */
}

/*
.mat-toolbar {
  background-color: $brand-primary !important;
}
.mat-button {
  color: white;
}*/

@media (max-width: 600px) {
  .example-spacer {
    flex: none;
  }

  .mat-toolbar {
    flex-direction: column; /* Die Toolbar-Elemente werden übereinander gelegt */
  }

  .icon-text {
    display: none; /* Text ausblenden um Platz auf kleineren Bildschirmen zu sparen */
  }
}

@media (min-width: 601px) {
  .mat-toolbar {
    flex-direction: row; /* Die Toolbar-Elemente in einer Zeile anordnen */
  }

  .icon-text {
    display: inline; /* Den Text sichtbar lassen */
  }
}


.mat-toolbar {
  flex-direction: column; /* Die Toolbar-Elemente in einer Zeile anordnen */
}

.icon-text {
  display: inline; /* Den Text sichtbar lassen */
}
.row {
  display: flex;
  flex-wrap: wrap; // Ermöglicht Umbrüche bei Spalten, die die gesamte Breite überschreiten.
  margin-right: -15px;
  margin-left: -15px;
}

.column {
  flex: 1; // Macht die Spalten flexibel.
  padding-right: 15px;
  padding-left: 15px;
  
  // Stellt sicher, dass der Inhalt untereinander auf kleineren Bildschirmen angezeigt wird.
  @media (max-width: 768px) {
    flex-basis: 100%; // Spalte nimmt volle Breite ein (Stacked).
    max-width: 100%;
  }
}


// Zusätzliche Spaltengrößen von xs bis xl
// Optional: Definieren von spezifischen Spaltenverteilungen ähnlich wie Bootstrap.

@for $i from 1 through 12 {
  .col-#{$i} {
    flex: 0 0 percentage($i / 12); // Festlegen der Basisgröße.
    max-width: percentage($i / 12);
  }
}

// Responsive Anpassung für Screens jenseits der "small"-Schwelle.
@media (min-width: 768px) {
  .row {
    margin-right: -15px;
    margin-left: -15px;
  }

  .col {
    flex: 1;
    padding-right: 15px;
    padding-left: 15px;
  }
  
  @for $i from 1 through 12 {
    .col-md-#{$i} {
      flex: 0 0 percentage($i / 12);
      max-width: percentage($i / 12);
    }
  }
}

@media (min-width: 992px) {
  @for $i from 1 through 12 {
    .col-lg-#{$i} {
      flex: 0 0 percentage($i / 12);
      max-width: percentage($i / 12);
    }
  }
}

@media (min-width: 1200px) {
  @for $i from 1 through 12 {
    .col-xl-#{$i} {
      flex: 0 0 percentage($i / 12);
      max-width: percentage($i / 12);
    }
  }
}




.flex-spacer {
  flex: 1 1 auto; /* Erzeugt flexiblen Platz */
  //width: 10%;
  //min-width: 20px;
}
.mat-sidenav-content{
  font-size: 200%;
  text-align: left;
}

.companyName{
  font-size: 150%;
}

div {
  overflow: inherit;
}

a{
  text-decoration: none;
  font-size: 110%;
  white-space: normal;
}

button{
  font-size: 110%;
  min-width: min-content;
}

.example-icon {
  padding: 0 14px;
}

.example-spacer {
  flex: 1 1 auto;
}

.mat-sidenav-content{
    font-size: 200%;
    text-align: center;
}